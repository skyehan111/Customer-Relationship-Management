<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--整合Hibernate -->
    <!--将sessionFactory配置到Spring容器中 -->
    <!--加载配置 方案1：仍然使用外部的hibernate.cfg.xml配置信息 -->
    <!--<bean name="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="configLocation" value="classpath:hibernate.cfg.xml"></property>
    </bean>-->
    <!--加载配置 方案2：在Spring配置中放置hibernate配置信息-->
    <bean name="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <!--将连接池注入到sessionFactory -->
        <property name="dataSource" ref="dataSource"></property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">true</prop>
            </props>
        </property>
        <!--引入映射 -->
        <property name="mappingDirectoryLocations" value="classpath:domain"></property>
    </bean>


    <!-- 配置c3p0连接池 -->
    <!-- 读取db.properties文件 -->
    <context:property-placeholder location="classpath:db.properties" />
    <bean name="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" >
        <property name="jdbcUrl" value="${jdbc.jdbcUrl}" ></property>
        <property name="driverClass" value="${jdbc.driverClass}" ></property>
        <property name="user" value="${jdbc.user}" ></property>
        <property name="password" value="${jdbc.password}" ></property>
    </bean>

    <!--配置核心事务管理器 -->
    <bean name="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>

    <!--配置通知 -->
    <!--<tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="save*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false" />
            <tx:method name="persist*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false" />
            <tx:method name="update*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false" />
            <tx:method name="modify*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false" />
            <tx:method name="delete*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false" />
            <tx:method name="remove*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false" />
            <tx:method name="get*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="true" />
            <tx:method name="find*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="true" />
        </tx:attributes>
    </tx:advice>-->
    <!--将通知织入目标对象 -->
    <!--<aop:config>
        <aop:pointcut id="txPc" expression="execution(* service.impl.*ServiceImpl.*(..))"></aop:pointcut>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPc"></aop:advisor>
    </aop:config> -->

    <!--开启注解事务 -->
    <tx:annotation-driven transaction-manager="transactionManager"></tx:annotation-driven>


    <!--action -->
    <bean name="userAction" class="web.UserAction" scope="prototype">
        <property name="userService" ref="userService"></property>
    </bean>
    <bean name="customerAction" class="web.CustomerAction" scope="prototype">
        <property name="customerService" ref="customerService"></property>
    </bean>
    <bean name="linkManAction" class="web.LinkManAction" scope="prototype">
        <property name="linkManService" ref="linkManService"></property>
        <property name="customerService" ref="customerService"></property>
    </bean>
    <!--service -->
    <bean name="userService" class="service.impl.UserServiceImpl">
        <property name="ud" ref="userDao"></property>
    </bean>
    <bean name="customerService" class="service.impl.CustomerServiceImpl">
        <property name="cd" ref="customerDao"></property>
    </bean>
    <bean name="linkManService" class="service.impl.LinkManServiceImpl">
        <property name="lmd" ref="linkManDao"></property>
    </bean>
    <!--dao -->
    <bean name="userDao" class="dao.impl.UserDaoImpl">
        <!--注入sessionfactory -->
        <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>
    <bean name="customerDao" class="dao.impl.CustomerDaoImpl">
        <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>
    <bean name="linkManDao" class="dao.impl.LinkManDaoImpl">
        <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>
</beans>